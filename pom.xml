<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
		 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>br.com.driw.sysgine</groupId>
	<artifactId>sysgine-framework</artifactId>
	<version>0.1.0</version>
	<packaging>pom</packaging>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<!-- Project -->
		<java.version>21</java.version>
		<sysgine.version>0.1.0</sysgine.version>
		<kotlin.version>1.9.20</kotlin.version>
		<kotest.version>5.9.1</kotest.version>
		<!-- Test -->
		<jacoco.version>0.8.12</jacoco.version>
	</properties>

	<name>Sysgine Framework</name>
	<description>System engine framework able you to create a system with a lot of code resources</description>
	<url>http://driw.com.br/sysgine-framework</url>

	<organization>
		<name>Sysgine Framework</name>
		<url>https://driw.com.br</url>
	</organization>

	<issueManagement>
		<system>Github</system>
		<url>https://github.com/driw/sysgine-framework/issues</url>
	</issueManagement>

	<modules>
		<module>sysgine-framework-test</module>
		<module>sysgine-framework-common</module>
		<module>sysgine-framework-reflection</module>
	</modules>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>br.com.driw.sysgine</groupId>
				<artifactId>sysgine-framework-bom</artifactId>
				<version>${sysgine.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>
		<!-- Kotlin -->

		<!-- https://mvnrepository.com/artifact/org.jetbrains.kotlin/kotlin-stdlib -->
		<dependency>
			<groupId>org.jetbrains.kotlin</groupId>
			<artifactId>kotlin-stdlib</artifactId>
			<version>${kotlin.version}</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.jetbrains.kotlin/kotlin-reflect -->
		<dependency>
			<groupId>org.jetbrains.kotlin</groupId>
			<artifactId>kotlin-reflect</artifactId>
			<version>${kotlin.version}</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.jetbrains.kotlin/kotlin-test -->
		<dependency>
			<groupId>org.jetbrains.kotlin</groupId>
			<artifactId>kotlin-test</artifactId>
			<version>${kotlin.version}</version>
			<scope>test</scope>
		</dependency>

		<!-- Quality -->

		<!-- https://mvnrepository.com/artifact/io.gitlab.arturbosch.detekt/detekt-formatting -->
		<dependency>
			<groupId>io.gitlab.arturbosch.detekt</groupId>
			<artifactId>detekt-formatting</artifactId>
			<scope>runtime</scope>
		</dependency>

		<!-- Test -->

		<!-- https://mvnrepository.com/artifact/io.mockk/mockk -->
		<dependency>
			<groupId>io.mockk</groupId>
			<artifactId>mockk</artifactId>
			<scope>test</scope>
		</dependency>
		<!-- https://mvnrepository.com/artifact/io.mockk/mockk-jvm -->
		<dependency>
			<groupId>io.mockk</groupId>
			<artifactId>mockk-jvm</artifactId>
			<scope>test</scope>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.junit.jupiter/junit-jupiter-engine -->
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-engine</artifactId>
			<scope>test</scope>
		</dependency>
		<!-- https://mvnrepository.com/artifact/io.kotest/kotest-assertions-core-jvm -->
		<dependency>
			<groupId>io.kotest</groupId>
			<artifactId>kotest-assertions-core-jvm</artifactId>
			<scope>runtime</scope>
		</dependency>
		<!-- https://mvnrepository.com/artifact/io.kotest/kotest-runner-junit5-jvm -->
		<dependency>
			<groupId>io.kotest</groupId>
			<artifactId>kotest-runner-junit5-jvm</artifactId>
			<scope>test</scope>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.jeasy/easy-random-core -->
		<dependency>
			<groupId>org.jeasy</groupId>
			<artifactId>easy-random-core</artifactId>
			<scope>test</scope>
		</dependency>
		<!-- https://mvnrepository.com/artifact/io.github.classgraph/classgraph [easy-random-core] -->
		<dependency>
			<groupId>io.github.classgraph</groupId>
			<artifactId>classgraph</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- Dependency Compatibility - mockk java21 -->

		<!-- https://mvnrepository.com/artifact/net.bytebuddy/byte-buddy -->
		<dependency>
			<groupId>net.bytebuddy</groupId>
			<artifactId>byte-buddy</artifactId>
			<version>1.15.10</version>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-source-plugin -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<version>3.3.1</version>
				<executions>
					<execution>
						<id>attach-sources</id>
						<phase>package</phase>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-dependency-plugin -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>3.8.1</version>
				<executions>
					<execution>
						<id>download-sources</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>resolve-sources</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
		<pluginManagement>
			<plugins>
				<!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-compiler-plugin -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>3.13.0</version>
					<configuration>
						<source>${java.version}</source>
						<target>${java.version}</target>
						<compilerArgs>
							<arg>-Dnet.bytebuddy.experimental=true</arg>
						</compilerArgs>
					</configuration>
				</plugin>
				<!-- https://mvnrepository.com/artifact/org.jetbrains.kotlin/kotlin-maven-plugin -->
				<plugin>
					<groupId>org.jetbrains.kotlin</groupId>
					<artifactId>kotlin-maven-plugin</artifactId>
					<version>${kotlin.version}</version>
					<configuration>
						<jvmTarget>${java.version}</jvmTarget>
					</configuration>
					<executions>
						<execution>
							<id>compile</id>
							<phase>compile</phase>
							<goals>
								<goal>compile</goal>
							</goals>
						</execution>
						<execution>
							<id>test-compile</id>
							<phase>test-compile</phase>
							<goals>
								<goal>test-compile</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-surefire-plugin -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>3.5.0</version>
					<configuration>
						<systemPropertyVariables>
							<kotest.framework.classpath.scanning.autoscan.disable>true</kotest.framework.classpath.scanning.autoscan.disable>
						</systemPropertyVariables>
					</configuration>
				</plugin>
				<!-- https://mvnrepository.com/artifact/org.jacoco/jacoco-maven-plugin -->
				<plugin>
					<groupId>org.jacoco</groupId>
					<artifactId>jacoco-maven-plugin</artifactId>
					<version>${jacoco.version}</version>
					<configuration>
						<destFile>target/jacoco.exec</destFile>
						<dataFile>target/jacoco.exec</dataFile>
						<output>file</output>
						<append>true</append>
					</configuration>
					<executions>
						<execution>
							<id>jacoco-initialize</id>
							<goals>
								<goal>prepare-agent</goal>
							</goals>
							<phase>test-compile</phase>
						</execution>
						<execution>
							<id>report</id>
							<phase>prepare-package</phase>
							<goals>
								<goal>report</goal>
							</goals>
						</execution>
						<execution>
							<id>jacoco-site</id>
							<phase>verify</phase>
							<goals>
								<goal>report</goal>
							</goals>
						</execution>
						<execution>
							<id>post-unit-test</id>
							<phase>test</phase>
							<goals>
								<goal>report</goal>
							</goals>
							<configuration>
								<dataFile>target/jacoco.exec</dataFile>
								<outputDirectory>target/jacoco-ut</outputDirectory>
							</configuration>
						</execution>
					</executions>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
</project>